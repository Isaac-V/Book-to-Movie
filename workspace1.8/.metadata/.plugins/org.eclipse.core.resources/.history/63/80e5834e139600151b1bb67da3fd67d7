package webScrapers;

import inputOutputEnums.Input;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
//import java.util.List;
//import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
//import java.util.StringTokenizer;



public class AmazonBookScraper {
	
	private Map<Input, Boolean[]> aNNInputs;
	
	public AmazonBookScraper(){
		this.aNNInputs = new HashMap<>();
		this.aNNInputs.put(Input.BESTSELLER, new Boolean[Input.BESTSELLER.size()]);
		this.aNNInputs.put(Input.RATING, new Boolean[Input.RATING.size()]);
		this.aNNInputs.put(Input.REVIEWCOUNT, new Boolean[Input.REVIEWCOUNT.size()]);
		this.aNNInputs.put(Input.AGEGROUP, new Boolean[Input.AGEGROUP.size()]);
		this.aNNInputs.put(Input.THEMES, new Boolean[Input.THEMES.size()]);
		this.aNNInputs.put(Input.TYPE, new Boolean[Input.TYPE.size()]);
		System.out.println("Checkpoint 1");
	};
	
	public Map<Input, Boolean[]> getANNInputs(){
		return this.aNNInputs;
	}
	
	public void setANNInputsFromTitle(String title){
		System.out.println("Checkpoint 2");
		URL bookPage = amazonBookPage(title);
		try{
			System.out.println("Checkpoint 10");
			BufferedReader pageReader = new BufferedReader(
			        new InputStreamReader(bookPage.openStream()));
			String sourceLine = pageReader.readLine();
			while(sourceLine != null){
				System.out.println(sourceLine);
				sourceLine = pageReader.readLine();
			}
		} catch (IOException e){
			System.out.println(e.getMessage());
		}
	}
	
	private URL amazonBookPage(String title){
		URL amazonBook = null;
		System.out.println("Checkpoint 3");
		String bookURL = getURLfromSearch(title);
		try{
			amazonBook = new URL(bookURL);
		} catch(MalformedURLException e){
			System.out.println(e.getMessage());
		}
		System.out.println("Checkpoint 9");
		return amazonBook;
	}
	
	private String getURLfromSearch(String title){
		String bookURL = null;
		System.out.println("Checkpoint 4");
		URL searchPage = amazonSearchPage(title);
		try{
			BufferedReader pageReader = new BufferedReader(
			        new InputStreamReader(searchPage.openStream()));
			String sourceLine = pageReader.readLine();
			while(sourceLine != null){
				if(sourceLine.contains("a-row s-result-list-parent-container")){
					System.out.println("Checkpoint 7");
					bookURL = getURLfromSearchHelper(sourceLine);
					break;
				}
				else{
					sourceLine = pageReader.readLine();
				}
			}
			
		} catch (IOException e){
			System.out.println(e.getMessage());
		}
		
		return bookURL;
	}
	
	private String getURLfromSearchHelper(String sourceLine) {
		String bookURL = "";
		String keyPhrase = "      ";
		for(int index = 0; index < sourceLine.length(); index++){
			keyPhrase = keyPhrase.substring(1) + sourceLine.charAt(index);
			if(keyPhrase.equals("href=\"")){
				System.out.println("Checkpoint 8");
				index++;
				while(sourceLine.charAt(index) != '\"'){
					bookURL += sourceLine.charAt(index);
					index++;
				}
				break;
			}
		}
		System.out.println("bookURL = " + bookURL);
		return bookURL;
	}

	private URL amazonSearchPage(String title){
		URL amazonSearchResults = null;
		String titleWords = title.replace(' ', '+');
		System.out.println("Checkpoint 5");
		String amazonSearch = "http://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Dstripbooks&field-keywords=";
		amazonSearch += titleWords;
		System.out.println("amazonSearch = " + amazonSearch);
		try{
			amazonSearchResults = new URL(amazonSearch);
		} catch(MalformedURLException e){
			System.out.println(e.getMessage());
		}
		System.out.println("Checkpoint 6");
		return amazonSearchResults;
	}
	
//	private List<String> breakUpTitleWords(String title){
//		List<String> words = new ArrayList<>();
//		StringTokenizer tokens = new StringTokenizer(title);
//		while(tokens.hasMoreTokens()){
//			String nextWord = tokens.nextToken();
//			if(tokens.hasMoreTokens()){
//				words.add(nextWord + "+");
//			}
//			else{
//				words.add(nextWord);
//			}
//		}
//		return words;
//	}
}
